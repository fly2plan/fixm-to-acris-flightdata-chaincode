import { StoreItemType } from './typing';
export declare function serialize(serializer: StoreItemType['serializer'], disallowIgnore?: boolean): (target: any, propertyKey: string) => void;
export declare function deserialize(deserializer: StoreItemType['deserializer'], disallowIgnore?: boolean): (target: any, propertyKey: string) => void;
export declare function beforeDeserialize(beforeDeserializer: StoreItemType['beforeDeserializer'], disallowIgnore?: boolean): (target: any, propertyKey: string) => void;
export declare function afterSerialize(afterSerializer: StoreItemType['afterSerializer'], disallowIgnore?: boolean): (target: any, propertyKey: string) => void;
export declare function serializeTarget(): (target: any, propertyKey: string) => void;
export declare function property(originalKey?: string, targetClass?: StoreItemType['targetClass'], isOptional?: boolean): (target: any, propertyKey: string) => void;
export declare function typed(targetClass: StoreItemType['targetClass']): (target: any, propertyKey: string) => void;
export declare function optional(): (target: any, propertyKey: string) => void;
export declare function defaultVal(value: any): (target: any, propertyKey: string) => void;
