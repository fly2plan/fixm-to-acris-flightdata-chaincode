"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.toClass = exports.toClasses = exports.arrayItemToClass = void 0;
var isarray_1 = __importDefault(require("isarray"));
var utils_1 = require("./utils");
exports.arrayItemToClass = function (arrayVal, Clazz, options) {
    return arrayVal.map(function (v) {
        // eslint-disable-next-line @typescript-eslint/no-use-before-define
        return isarray_1.default(v) ? exports.arrayItemToClass(v, Clazz, options) : objectToClass(v, Clazz, options);
    });
};
var objectToClass = function (jsonObj, Clazz, options) {
    var instance = new Clazz();
    var originalKeyStore = utils_1.getOriginalKeyStore(Clazz);
    originalKeyStore.forEach(function (propertiesOptions, originalKey) {
        var originalValue = jsonObj[originalKey];
        propertiesOptions.forEach(function (storeItemoptions) {
            var key = storeItemoptions.key, beforeDeserializer = storeItemoptions.beforeDeserializer, deserializer = storeItemoptions.deserializer, targetClass = storeItemoptions.targetClass, optional = storeItemoptions.optional;
            var disallowIgnoreDeserializer = storeItemoptions.disallowIgnoreDeserializer || !options.ignoreDeserializer;
            var disallowIgnoreBeforeDeserializer = storeItemoptions.disallowIgnoreBeforeDeserializer || !options.ignoreBeforeDeserializer;
            var isValueNotExist = options.distinguishNullAndUndefined ? utils_1.isUndefined : utils_1.isNullOrUndefined;
            var value = originalValue;
            if (isValueNotExist(value)) {
                if (!isValueNotExist(storeItemoptions.default)) {
                    instance[key] = storeItemoptions.default;
                    return;
                }
                if (!optional) {
                    throw new Error("Can't map '" + originalKey + "' to " + Clazz.name + "." + key + ", property '" + originalKey + "' not found");
                }
                return;
            }
            value =
                beforeDeserializer && disallowIgnoreBeforeDeserializer
                    ? beforeDeserializer(value, instance, jsonObj, options)
                    : value;
            if (value && targetClass) {
                if (isarray_1.default(value)) {
                    value = exports.arrayItemToClass(value, targetClass, options);
                }
                else {
                    // eslint-disable-next-line @typescript-eslint/no-use-before-define
                    value = exports.toClass(value, targetClass, options);
                }
            }
            instance[key] =
                deserializer && disallowIgnoreDeserializer ? deserializer(value, instance, jsonObj, options) : value;
        });
    });
    return instance;
};
exports.toClasses = function (rawJson, Clazz, options) {
    if (options === void 0) { options = {}; }
    if (!isarray_1.default(rawJson)) {
        throw new Error("rawJson " + rawJson + " must be an array");
    }
    var constructor = Clazz.prototype.constructor;
    return rawJson.map(function (item) { return objectToClass(item, constructor, options); });
};
exports.toClass = function (rawJson, Clazz, options) {
    if (options === void 0) { options = {}; }
    var constructor = Clazz.prototype.constructor;
    return objectToClass(rawJson, constructor, options);
};
//# sourceMappingURL=to-class.js.map